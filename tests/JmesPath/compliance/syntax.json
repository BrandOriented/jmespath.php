[{
  "comment": "Dot syntax",
  "given": {},
  "cases": [
    {
      "expression": "foo.bar",
      "result": null
    },
    {
      "expression": "foo.1",
      "result": null
    },
    {
      "expression": "foo.-11",
      "result": null
    },
    {
      "expression": "foo",
      "result": null
    },
    {
      "expression": "foo.",
      "error": "syntax"
    },
    {
      "expression": "foo.",
      "error": "syntax"
    },
    {
      "expression": ".foo",
      "error": "syntax"
    },
    {
      "expression": "foo..bar",
      "error": "syntax"
    },
    {
      "expression": "foo.bar.",
      "error": "syntax"
    },
    {
      "expression": "foo[.]",
      "error": "syntax"
    }
  ]
},
  {
    "comment": "Simple token errors",
    "given": {},
    "cases": [
      {
        "expression": ".",
        "error": "syntax"
      },
      {
        "expression": ":",
        "error": "syntax"
      },
      {
        "expression": ",",
        "error": "syntax"
      },
      {
        "expression": "]",
        "error": "syntax"
      },
      {
        "expression": "[",
        "error": "syntax"
      },
      {
        "expression": "}",
        "error": "syntax"
      },
      {
        "expression": "{",
        "error": "syntax"
      },
      {
        "expression": ")",
        "error": "syntax"
      },
      {
        "expression": "(",
        "error": "syntax"
      },
      {
        "expression": "a[",
        "error": "syntax"
      },
      {
        "expression": "a]",
        "error": "syntax"
      },
      {
        "expression": "a][",
        "error": "syntax"
      }
    ]
  },
  {
    "comment": "Wildcard syntax",
    "given": {},
    "cases": [
      {
        "expression": "*",
        "result": []
      },
      {
        "expression": "*.*",
        "result": []
      },
      {
        "expression": "*.foo",
        "result": []
      },
      {
        "expression": "*[0]",
        "result": []
      },
      {
        "expression": ".*",
        "error": "syntax"
      },
      {
        "expression": "*foo",
        "error": "syntax"
      },
      {
        "expression": "*0",
        "error": "syntax"
      }
    ]
  },
  {
    "comment": "Simple bracket syntax",
    "given": {},
    "cases": [
      {
        "expression": "[0]",
        "result": null
      },
      {
        "expression": "[*]",
        "result": []
      },
      {
        "expression": "*.[0]",
        "result": []
      },
      {
        "expression": "[*].bar",
        "result": []
      },
      {
        "expression": "[*][0]",
        "result": []
      },
      {
        "expression": "foo[#]",
        "error": "syntax"
      }
    ]
  },
  {
    "comment": "Multi-select list syntax",
    "given": {},
    "cases": [
      {
        "expression": "foo[0]",
        "result": null
      },
      {
        "comment": "Valid multi-select of a list",
        "expression": "foo[0, 1]",
        "result": null
      },
      {
        "comment": "Multi-select of a list with trailing comma",
        "expression": "foo[0, ]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a list with extra comma",
        "expression": "foo[0,, 1]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a list using an identifier index",
        "expression": "foo[abc]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a list using identifier indices",
        "expression": "foo[abc, def]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a list using an identifier index",
        "expression": "foo[abc, 1]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a list using an identifier index with trailing comma",
        "expression": "foo[abc, ]",
        "error": "syntax"
      },
      {
        "comment": "Valid multi-select of a hash using an identifier index",
        "expression": "foo.[abc]",
        "result": null
      },
      {
        "comment": "Valid multi-select of a hash",
        "expression": "foo.[abc, def]",
        "result": null
      },
      {
        "comment": "Multi-select of a hash using a numeric index",
        "expression": "foo.[abc, 1]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a hash with a trailing comma",
        "expression": "foo.[abc, ]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a hash with extra commas",
        "expression": "foo.[abc,, def]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a hash using a number index",
        "expression": "foo.[0]",
        "error": "syntax"
      },
      {
        "comment": "Multi-select of a hash using number indices",
        "expression": "foo.[0, 1]",
        "error": "syntax"
      }
    ]
  },
  {
    "comment": "Multi-select hash syntax",
    "given": {},
    "cases": [
      {
        "comment": "No key or value",
        "expression": "a{}",
        "error": "syntax"
      },
      {
        "comment": "Not a key value pair",
        "expression": "a{foo}",
        "error": "syntax"
      },
      {
        "comment": "Missing value",
        "expression": "a{foo:}",
        "error": "syntax"
      },
      {
        "comment": "Missing value with trailing comma",
        "expression": "a{foo: ,}",
        "error": "syntax"
      },
      {
        "comment": "Valid multi-select hash",
        "expression": "a{foo: bar}",
        "result": null
      },
      {
        "comment": "Missing key-value pair",
        "expression": "a.{}",
        "error": "syntax"
      },
      {
        "comment": "Not a key-value pair",
        "expression": "a.{foo}",
        "error": "syntax"
      },
      {
        "comment": "Missing value",
        "expression": "a.{foo:}",
        "error": "syntax"
      },
      {
        "comment": "Missing value with trailing comma",
        "expression": "a.{foo: ,}",
        "error": "syntax"
      },
      {
        "comment": "Valid multi-select hash extraction",
        "expression": "a.{foo: bar}",
        "result": null
      },
      {
        "comment": "Valid multi-select hash extraction",
        "expression": "a.{foo: bar, baz: bam}",
        "result": null
      },
      {
        "comment": "Trailing comma",
        "expression": "a.{foo: bar, }",
        "error": "syntax"
      },
      {
        "comment": "Missing key in second key-value pair",
        "expression": "a.{foo: bar, baz}",
        "error": "syntax"
      },
      {
        "comment": "Missing value in second key-value pair",
        "expression": "a.{foo: bar, baz:}",
        "error": "syntax"
      },
      {
        "comment": "Trailing comma",
        "expression": "a.{foo: bar, baz: bam, }",
        "error": "syntax"
      }
    ]
  },
  {
    "comment": "Or expressions",
    "given": {},
    "cases": [
      {
        "expression": "foo || bar",
        "result": null
      },
      {
        "expression": "foo ||",
        "error": "syntax"
      },
      {
        "expression": "foo.|| bar",
        "error": "syntax"
      },
      {
        "expression": " || foo",
        "error": "syntax"
      },
      {
        "expression": "foo || || foo",
        "error": "syntax"
      },
      {
        "expression": "foo.[a || b]",
        "result": null
      },
      {
        "expression": "foo.[a ||]",
        "error": "syntax"
      }
    ]
  }]
