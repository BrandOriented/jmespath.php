[{
  "given":
  {
    "foo": -1,
    "zero": 0,
    "arr": [-1, 3, 4, 5, "a", "100"],
    "strings": ["a", "b", "c"],
    "dec": [1.01, 1.9, -1.5],
    "str": "Str",
    "false": false,
    "empty": [],
    "empty2": {}
  },
  "cases": [
    {
      "expression": "abs(@.foo)",
      "result": 1
    },
    {
      "expression": "abs(foo)",
      "result": 1
    },
    {
      "expression": "abs(@.str)",
      "result": null
    },
    {
      "expression": "abs(str)",
      "result": null
    },
    {
      "expression": "abs(@.arr[1])",
      "result": 3
    },
    {
      "expression": "abs(arr[1])",
      "result": 3
    },
    {
      "expression": "abs(false)",
      "result": null
    },
    {
      "expression": "abs(`false`)",
      "result": null
    },
    {
      "expression": "abs(`1`, `2`, `3`)",
      "error": "runtime"
    },
    {
      "expression": "abs()",
      "error": "runtime"
    },
    {
      "expression": "avg(@.arr)",
      "result": 2.75
    },
    {
      "expression": "avg(arr)",
      "result": 2.75
    },
    {
      "expression": "avg(`abc`)",
      "result": null
    },
    {
      "expression": "avg(@.foo)",
      "result": null
    },
    {
      "expression": "avg(foo)",
      "result": null
    },
    {
      "expression": "avg(@)",
      "result": null
    },
    {
      "expression": "avg(@.strings)",
      "result": null
    },
    {
      "expression": "avg(strings)",
      "result": null
    },
    {
      "expression": "ceil(@.dec[0])",
      "result": 2
    },
    {
      "expression": "ceil(dec[0])",
      "result": 2
    },
    {
      "expression": "ceil(@.dec[1])",
      "result": 2
    },
    {
      "expression": "ceil(dec[1])",
      "result": 2
    },
    {
      "expression": "ceil(@.dec[2])",
      "result": -1
    },
    {
      "expression": "ceil(dec[2])",
      "result": -1
    },
    {
      "expression": "ceil(abc)",
      "result": null
    },
    {
      "expression": "ceil(`abc`)",
      "result": null
    },
    {
      "expression": "concat(@.strings[0], strings[1], @.strings[2])",
      "result": "abc"
    },
    {
      "expression": "concat(strings[0], strings[1], @.strings[2], foo)",
      "result": "abc-1"
    },
    {
      "expression": "concat(@.strings[0], @.strings[1], strings[2], @)",
      "result": null
    },
    {
      "expression": "concat(`null`, `false`)",
      "result": null
    },
    {
      "expression": "concat(`foo`)",
      "error": "runtime"
    },
    {
      "expression": "concat()",
      "error": "runtime"
    },
    {
      "expression": "contains(`abc`, `a`)",
      "result": true
    },
    {
      "expression": "contains(`abc`, `d`)",
      "result": false
    },
    {
      "expression": "contains(`false`, `d`)",
      "result": null
    },
    {
      "expression": "contains(@.strings, `a`)",
      "result": true
    },
    {
      "expression": "contains(dec, `1.9`)",
      "result": true
    },
    {
      "expression": "contains(dec, `false`)",
      "result": null
    },
    {
      "expression": "length(@)",
      "result": 9
    },
    {
      "expression": "length(arr)",
      "result": 6
    },
    {
      "expression": "length(@.str)",
      "result": 3
    },
    {
      "expression": "floor(@.dec[0])",
      "result": 1
    },
    {
      "expression": "floor(dec[0])",
      "result": 1
    },
    {
      "expression": "floor(@.foo)",
      "result": -1
    },
    {
      "expression": "floor(@.str)",
      "result": null
    },
    {
      "expression": "get(@.empty)",
      "result": null
    },
    {
      "expression": "get(@.empty, @.\"false\")",
      "result": null
    },
    {
      "expression": "get(@.empty, @.\"false\", @.foo)",
      "result": -1
    },
    {
      "expression": "get(@.zero, `10`)",
      "result": 0
    },
    {
      "expression": "get(`null`, `false`, @.empty, `true`)",
      "result": true
    },
    {
      "expression": "join(`, `, str)",
      "result": null
    },
    {
      "expression": "join(`, `, strings)",
      "result": "a, b, c"
    },
    {
      "expression": "join(`|`, strings)",
      "result": "a|b|c"
    },
    {
      "expression": "join(`|`, @.dec)",
      "result": "1.01|1.9|-1.5"
    },
    {
      "expression": "join(`\"|\"`, @.empty)",
      "result": ""
    },
    {
      "expression": "keys(@)",
      "result": ["foo", "zero", "arr", "strings", "dec", "str", "false", "empty", "empty2"]
    },
    {
      "expression": "keys(@.empty2)",
      "result": []
    },
    {
      "expression": "keys(@.strings)",
      "result": null
    },
    {
      "expression": "keys(`abc`)",
      "result": null
    },
    {
      "expression": "keys(`false`)",
      "result": null
    },
    {
      "expression": "length(`abc`)",
      "result": 3
    },
    {
      "expression": "length(`\"\"`)",
      "result": 0
    },
    {
      "expression": "length(@.foo)",
      "result": null
    },
    {
      "expression": "length(@.strings[0])",
      "result": 1
    },
    {
      "expression": "length(`false`)",
      "result": null
    },
    {
      "expression": "max(@.arr)",
      "result": 5
    },
    {
      "expression": "max(arr)",
      "result": 5
    },
    {
      "expression": "max(@.dec)",
      "result": 1.9
    },
    {
      "expression": "max(abc)",
      "result": null
    },
    {
      "expression": "max(@.empty)",
      "result": null
    },
    {
      "expression": "min(@.arr)",
      "result": -1
    },
    {
      "expression": "min(@.dec)",
      "result": -1.5
    },
    {
      "expression": "min(abc)",
      "result": null
    },
    {
      "expression": "min(@.empty)",
      "result": null
    },
    {
      "expression": "sort(@.arr)",
      "result": [-1, 3, 4, 5, "a", "100"]
    },
    {
      "expression": "sort(@.strings)",
      "result":  ["a", "b", "c"]
    },
    {
      "expression": "sort(abc)",
      "result": null
    },
    {
      "expression": "sort(@.empty)",
      "result": []
    },
    {
      "expression": "sort(@)",
      "result": null
    },
    {
      "expression": "type(`abc`)",
      "result": "string"
    },
    {
      "expression": "type(`123`)",
      "result": "number"
    },
    {
      "expression": "type(`123`)",
      "result": "number"
    },
    {
      "expression": "type(`1.2`)",
      "result": "number"
    },
    {
      "expression": "type(`true`)",
      "result": "boolean"
    },
    {
      "expression": "type(`false`)",
      "result": "boolean"
    },
    {
      "expression": "type(@.empty)",
      "result": "array"
    },
    {
      "expression": "type(empty)",
      "result": "array"
    },
    {
      "expression": "type(@.strings)",
      "result": "array"
    },
    {
      "expression": "type(@)",
      "result": "object"
    }
  ]
}, {
  "given":
    [
      {"foo": "baz", "bar": "bam"},
      {"foo": "123"},
      {"abc": "def", "fez": "qux"},
      [1, 2, 3],
      "abc",
      true
    ],
  "cases": [
    {
      "expression": "union(@[0], @[1])",
      "result": {"foo": "baz", "bar": "bam"}
    },
    {
      "expression": "union(@[0], @[2])",
      "result": {"foo": "baz", "bar": "bam", "abc": "def", "fez": "qux"}
    },
    {
      "expression": "union(@[3], @[4])",
      "result": null
    },
    {
      "expression": "union(true, false)",
      "result": null
    },
    {
      "expression": "values(@[0])",
      "result": ["baz", "bam"]
    },
    {
      "expression": "values(@[1])",
      "result": ["123"]
    },
    {
      "expression": "values(@[3])",
      "result": [1, 2, 3]
    },
    {
      "expression": "values(@[4])",
      "result": null
    }
  ]
}]
