[{
  "given":
    {
      "foo": -1,
      "zero": 0,
      "arr": [-1, 3, 4, 5, "a", "100"],
      "strings": ["a", "b", "c"],
      "dec": [1.01, 1.9, -1.5],
      "str": "Str",
      "false": false,
      "empty": [],
      "empty2": {}
    },
  "cases": [
    {
      "expression": "abs(@.foo)",
      "result": 1
    },
    {
      "expression": "abs(@.str)",
      "result": null
    },
    {
      "expression": "abs(@.arr[1])",
      "result": 3
    },
    {
      "expression": "abs(false)",
      "result": null
    },
    {
      "expression": "abs(1, 2, 3)",
      "error": true
    },
    {
      "expression": "abs()",
      "error": true
    },
    {
      "expression": "avg(@.arr)",
      "result": 2.75
    },
    {
      "expression": "avg(\"abc\")",
      "result": null
    },
    {
      "expression": "avg(@.foo)",
      "result": null
    },
    {
      "expression": "avg(@)",
      "result": null
    },
    {
      "expression": "avg(@.strings)",
      "result": null
    },
    {
      "expression": "ceil(@.dec[0])",
      "result": 2
    },
    {
      "expression": "ceil(@.dec[1])",
      "result": 2
    },
    {
      "expression": "ceil(@.dec[2])",
      "result": -1
    },
    {
      "expression": "ceil(abc)",
      "result": null
    },
    {
      "expression": "concat(@.strings[0], @.strings[1], @.strings[2])",
      "result": "abc"
    },
    {
      "expression": "concat(@.strings[0], @.strings[1], @.strings[2], @.foo)",
      "result": "abc-1"
    },
    {
      "expression": "concat(@.strings[0], @.strings[1], @.strings[2], @)",
      "result": "abc"
    },
    {
      "expression": "concat(null, false)",
      "result": null
    },
    {
      "expression": "concat(foo)",
      "error": true
    },
    {
      "expression": "concat()",
      "error": true
    },
    {
      "expression": "contains(abc, a)",
      "result": true
    },
    {
      "expression": "contains(abc, d)",
      "result": false
    },
    {
      "expression": "contains(false, d)",
      "result": null
    },
    {
      "expression": "contains(@.strings, a)",
      "result": true
    },
    {
      "expression": "contains(@.dec, 1.9)",
      "result": false
    },
    {
      "expression": "contains(@.dec, false)",
      "error": true
    },
    {
      "expression": "count(@)",
      "result": 9
    },
    {
      "expression": "count(@.arr)",
      "result": 6
    },
    {
      "expression": "count(@.str)",
      "result": null
    },
    {
      "expression": "floor(@.dec[0])",
      "result": 1
    },
    {
      "expression": "floor(@.foo)",
      "result": -1
    },
    {
      "expression": "floor(@.str)",
      "result": null
    },
    {
      "expression": "get(@.empty)",
      "result": null
    },
    {
      "expression": "get(@.empty, @.\"false\")",
      "result": null
    },
    {
      "expression": "get(@.empty, @.\"false\", @.foo)",
      "result": -1
    },
    {
      "expression": "get(@.zero, 10)",
      "result": 0
    },
    {
      "expression": "get(null, false, @.empty, true)",
      "result": true
    },
    {
      "expression": "join(\", \", @.str)",
      "result": null
    },
    {
      "expression": "join(\", \", @.strings)",
      "result": "a, b, c"
    },
    {
      "expression": "join(\"|\", @.strings)",
      "result": "a|b|c"
    },
    {
      "expression": "join(\"|\", @.dec)",
      "result": "1.01|1.9|-1.5"
    },
    {
      "expression": "join(\"|\", @.empty)",
      "result": ""
    },
    {
      "expression": "keys(@)",
      "result": ["foo", "zero", "arr", "strings", "dec", "str", "false", "empty", "empty2"]
    },
    {
      "expression": "keys(@.empty2)",
      "result": []
    },
    {
      "expression": "keys(@.strings)",
      "result": null
    },
    {
      "expression": "keys(abc)",
      "result": null
    },
    {
      "expression": "keys(false)",
      "result": null
    },
    {
      "expression": "length(abc)",
      "result": 3
    },
    {
      "expression": "length(\"\")",
      "result": 0
    },
    {
      "expression": "length(@.foo)",
      "result": null
    },
    {
      "expression": "length(@.strings[0])",
      "result": 1
    },
    {
      "expression": "length(false)",
      "result": null
    },
    {
      "expression": "lowercase(@.str)",
      "result": "str"
    },
    {
      "expression": "lowercase(false)",
      "result": null
    },
    {
      "expression": "matches(@.str, \"str\")",
      "result": false
    },
    {
      "expression": "matches(@.str, \"str\", i)",
      "result": true
    },
    {
      "expression": "matches(@.str, false)",
      "error": true
    },
    {
      "expression": "matches(@.str, \"ST\", \"im\")",
      "result": true
    },
    {
      "expression": "matches(false, \"str\")",
      "result": null
    },
    {
      "expression": "matches(str, \"str\", i, 123)",
      "error": true
    },
    {
      "expression": "max(@.arr)",
      "result": 5
    },
    {
      "expression": "max(@.dec)",
      "result": 1.9
    },
    {
      "expression": "max(abc)",
      "result": null
    },
    {
      "expression": "max(@.empty)",
      "result": null
    },
    {
      "expression": "min(@.arr)",
      "result": -1
    },
    {
      "expression": "min(@.dec)",
      "result": -1.5
    },
    {
      "expression": "min(abc)",
      "result": null
    },
    {
      "expression": "min(@.empty)",
      "result": null
    },
    {
      "expression": "reverse(@.arr)",
      "result": ["100", "a", 5, 4, 3, -1]
    },
    {
      "expression": "reverse(@.strings)",
      "result":  ["c", "b", "a"]
    },
    {
      "expression": "reverse(abc)",
      "result": null
    },
    {
      "expression": "reverse(@.empty)",
      "result": null
    },
    {
      "expression": "reverse(@)",
      "result": null
    },
    {
      "expression": "sort(@.arr)",
      "result": [-1, 3, 4, 5, "100", "a"]
    },
    {
      "expression": "sort(@.strings)",
      "result":  ["a", "b", "c"]
    },
    {
      "expression": "sort(abc)",
      "result": null
    },
    {
      "expression": "sort(@.empty)",
      "result": []
    },
    {
      "expression": "sort(@)",
      "result": null
    },
    {
      "expression": "substring(abc, 0, -1)",
      "result": "ab"
    },
    {
      "expression": "substring(abc, -2)",
      "result": "bc"
    },
    {
      "expression": "substring(abc123, 1)",
      "result": "bc123"
    },
    {
      "expression": "substring(false, 1, 1)",
      "result": null
    },
    {
      "expression": "substring(abc, true)",
      "error": true
    },
    {
      "expression": "substring(abc, 1, false)",
      "error": true
    },
    {
      "expression": "substring()",
      "error": true
    },
    {
      "expression": "type(abc)",
      "result": "String"
    },
    {
      "expression": "type(123)",
      "result": "Number"
    },
    {
      "expression": "type(1.2)",
      "result": "Number"
    },
    {
      "expression": "type(true)",
      "result": "Boolean"
    },
    {
      "expression": "type(false)",
      "result": "Boolean"
    },
    {
      "expression": "type(@.empty)",
      "result": "Array"
    },
    {
      "expression": "type(@.strings)",
      "result": "Array"
    },
    {
      "expression": "type(@)",
      "result": "Object"
    },
    {
      "expression": "uppercase(@.str)",
      "result": "STR"
    },
    {
      "expression": "uppercase(false)",
      "result": null
    }
  ]
}, {
  "given":
    [
      {"foo": "baz", "bar": "bam"},
      {"foo": "123"},
      {"abc": "def", "fez": "qux"},
      [1, 2, 3],
      "abc",
      true
    ],
  "cases": [
    {
      "expression": "union(@[0], @[1])",
      "result": {"foo": "baz", "bar": "bam"}
    },
    {
      "expression": "union(@[0], @[2])",
      "result": {"foo": "baz", "bar": "bam", "abc": "def", "fez": "qux"}
    },
    {
      "expression": "union(@[3], @[4])",
      "result": null
    },
    {
      "expression": "union(true, false)",
      "result": null
    },
    {
      "expression": "values(@[0])",
      "result": ["baz", "bam"]
    },
    {
      "expression": "values(@[1])",
      "result": ["123"]
    },
    {
      "expression": "values(@[3])",
      "result": [1, 2, 3]
    },
    {
      "expression": "values(@[4])",
      "result": null
    }
  ]
}]
